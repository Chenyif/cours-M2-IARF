%on a 10 classes de sonclasses = {'aa','ee','eh','eu','ii','oe','oh','oo','uu','yy'};%liste des moyennes des classeslisteMean={};%liste des matrices de variances/covariance des classeslisteCov={};%-------------APPRENTISSAGE-----------------------%%pour chaque classe c, on recupere le vecteur moyenne%et la matrice de covariancefor c=1:10        %donnees d'apprentissage    donneesApp=[];                for numero=1:80        %on recupere les donnees d'apprentissage (vecteur colone)        %a partir du repertoire Signal        v=['Signal/' classes{c} num2str(numero-1,'%.2d') '.wav'];        s=wavread(v);                %on effectue une transformée de Fourrier sur 32 fenetres        %on obtient un vecteur colonne de dimension 32        s=parametrisation_fft32(s);                %on transpose le vecteur et on l'ajoute aux données d'apprentissage        donneesApp=[donneesApp;s'];            end        %calcul de la moyenne et matrice covariance de la classe c    [mi,ci]=apprend(donneesApp);        %on fabrique la liste des moyennes    listeMean{c}=mi;    %on fabrique la liste des matrices de covariances    listeCov{c}=ci;    end%-------------RECONNAISSANCE-----------------------%%matrice des scoresmatScores=cell(10,10);%on initialise for i=1:10    for j=1:10        matScores{i,j}=0;    endend%pour chaque classefor c=1:10            for numero=81:100        %on recupere les 20 fichiers de test        %a partir du repertoire Signal        v = [ 'Signal/' classes{c} num2str(numero-1,'%.2d') '.wav'];        vect=wavread(v);        %parametrisation du vecteur        vect=parametrisation_fft32(vect);        %transposée        vect=vect';                        %on calcule le score obtenu pour chaque classe        listeScore=[];        for c2=1:10            listeMean{c2};            listeScore=[listeScore,score(listeMean{c2},listeCov{c2},vect)];        end        listeScore        %on prend le argmin, ie la classe qui minimise le score        [valmin,Iargmin] = min(listeScore);                %la classe est reconnu comme classe k        k=Iargmin;        %on fait la matrice des scores        matScores{c,k} = matScores{c,k}+1;            end    end